version: "3.7"

services:

  bootstrap:
    image: ${NWAKU_IMAGE}
    restart: on-failure
    #Â TODO: expose some ports to inject traffic
    ports:
      - 127.0.0.1:60000:60000
      - 127.0.0.1:8008:8008
      - 127.0.0.1:9000:9000
      - 127.0.0.1:8545:8545
    entrypoint: sh
    command:
    - '/opt/runnode.sh'
    volumes:
      - ./runnode.sh:/opt/runnode.sh:Z
    environment:
      BOOTSTRAP_NODE: "true"

  traffic:
    image: "waku-publisher:latest"
    build:
      context: ../waku-publisher
      dockerfile: Dockerfile
    entrypoint: sh
      - 'opt/runnode.sh'
    volumes:
      - ./runnode.sh:/opt/runnode.sh:Z
    environment:
      TRAFFIC_GENERATOR: "true"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus-config.yml:/etc/prometheus/prometheus.yml:z
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 127.0.0.1:9090:9090
    restart: on-failure

  grafana:
    image: grafana/grafana:latest
    env_file:
      - ./monitoring/configuration/grafana-plugins.env
    volumes:
      - ./monitoring/configuration/grafana.ini:/etc/grafana/grafana.ini:z
      - ./monitoring/configuration/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:z
      - ./monitoring/configuration/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:z
      - ./monitoring/configuration/dashboards:/var/lib/grafana/dashboards/:z
      - ./monitoring/configuration/customizations/custom-logo.svg:/usr/share/grafana/public/img/grafana_icon.svg:z
      - ./monitoring/configuration/customizations/custom-logo.svg:/usr/share/grafana/public/img/grafana_typelogo.svg:z
      - ./monitoring/configuration/customizations/custom-logo.png:/usr/share/grafana/public/img/fav32.png:z
    ports:
      #- 127.0.0.1:3000:3000
      # open port to access the dashboard
      - 3000:3000
    restart: on-failure
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    #ports:
    #  - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis

  redis:
    image: redis:latest
    container_name: redis
    #ports:
    #  - 6379:6379

  nwaku:
    image: ${NWAKU_IMAGE}
    restart: on-failure
    deploy:
      replicas: 5
    entrypoint: sh
    command:
      - '/opt/runnode.sh'
    volumes:
      - ./runnode.sh:/opt/runnode.sh:Z
    depends_on:
      - bootstrap
